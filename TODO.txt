* get directory name (-D), and desired name (-n) and size (-S) for image file

* create FAT and other necessary structures
    - Reserved Region - some number (typically 32) of (typically) 512-byte sectors (no point in using higher, because even at 512 the max cluster size can be reached by setting sectors-per-cluster)
        - BPB (BIOS Parameter Block) - in first sector
    - FAT Region (num-fats * fat-size clusters)
    - File and Directory Data Region - first cluster (of size sectors-per-cluster clusters) is known as cluster 2 and starts immediately after the 2nd FAT
    - Must use FAT16 if less than 512 MB and FAT32 if greater than 512 MB (actually, this is supposed to be dependent on the number of clusters...)

* implement operations:
    - getattr
    - readdir
    - open
    - read
    - write

    - access - check file access permissions (alternative to getattr...)
    - fgetattr - alternative to getattr - not required (?)
    - write_buf - alternative to write
    - read_buf - alternative to read

    - flush - do all writes synchronously
    - fsync - do all writes synchronously
    - init - initialize filesystem
    - destroy - close filesystem
    - release - not necessary; not allocating data on open()
    - statfs - filesystem statistics
    - bmap - only for block devices

    - opendir - N/A
    - readlink - N/A
    - mknod - N/A
    - mkdir - N/A
    - unlink - N/A
    - rmdir - N/A
    - symlink - N/A
    - rename - N/A
    - link - N/A
    - chmod - N/A
    - chown - N/A
    - truncate - N/A
    - setxattr - N/A
    - getxattr - N/A
    - listxattr - N/A
    - removexattr - N/A
    - releasedir - N/A
    - fsyncdir - N/A
    - create - N/A
    - ftruncate - N/A
    - lock - N/A
    - utimens - N/A
    - ioctl - N/A
    - poll - N/A
    - flock - N/A
    - fallocate - N/A
